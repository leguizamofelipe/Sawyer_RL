from random import random
from sawyer import *
from point import *
import pickle
import matplotlib.pyplot as plt

S = Sawyer()

active_joints = {   
    0 : {'Max': 1.5, 'Min': 0}, 
    1 : {'Max': 1, 'Min': -1}, 
    2 : {'Max': 3, 'Min': -3},  
    3 : {'Max': 2, 'Min': -2}, 
    4 : {'Max': 2, 'Min': -2}, 
    5 : {'Max': 2, 'Min': -2}, 
    6 : {'Max': 2, 'Min': -2}, 
}

'''
points_dict = {}

for i in range(1, 100): vb
    for joint in active_joints:
        ang.append(active_joints[joint]['Min'] + random() * (active_joints[joint]['Max'] - active_joints[joint]['Min']))

    print(ang)

    points_dict.update({i:ang})

with open('points.p', 'wb') as handle:
    pickle.dump(points_dict, handle, protocol=pickle.HIGHEST_PROTOCOL)
'''

with open('points.p', 'rb') as handle:
    points_dict = pickle.load(handle)

for point in points_dict:
    S.move_to_angles(points_dict[point], printout = False)

x_err = [
        0.04424, 
        0.08472, 
        -0.02222, 
        -0.02038, 
        0.03637, 
        0.04035, 
        -0.07776, 
        3.97E-02, 
        -0.01248, 
        -0.11467, 
        -0.08034, 
        0.05634, 
        -0.01403, 
        0.13011, 
        0.00228, 
        -0.06797, 
        -0.12616, 
        0.10012, 
        -0.10759, 
        -0.02004, 
        -0.0999, 
        0.09617, 
        -0.06481, 
        -0.06016, 
        -0.10669, 
        0.00162, 
        0.00446, 
        -0.03361, 
        0.11978, 
        -0.093, 
        0.01469, 
        -0.02354, 
        -0.07386, 
        -0.06115, 
        -0.04225, 
        -0.06142, 
        0.06855, 
        -0.04429, 
        0.11737, 
        -0.09772, 
        0.13219, 
        -0.12677, 
        0.02086, 
        -0.06141, 
        -0.05049, 
        -0.01357, 
        0.04635, 
        -0.05546, 
        0.11429, 
        -0.02624, 
        0.07898, 
        -0.10061, 
        -0.03265, 
        -0.00918, 
        -0.0806, 
        0.02254, 
        0.12977, 
        0.01406, 
        0.01119, 
        0.12026, 
        0.1104, 
        0.00588, 
        0.02426, 
        0.0085, 
        -0.10831, 
        0.07001, 
        0.10783, 
        -0.05635, 
        0.00196, 
        -0.09448, 
        -0.12406, 
        0.04613, 
        0.03147, 
        2.13E-02, 
        0.04259, 
        -0.07977, 
        -0.01569, 
        -0.00288, 
        0.03454, 
        0.12069, 
        0.07154, 
        -0.07681, 
        -0.10714, 
        -0.12844, 
        0.07561, 
        -0.06688, 
        -0.12698, 
        0.53037, 
        -0.12264, 
        0.0281, 
        -0.12026, 
        0.00477, 
        0.05705, 
        -0.0689, 
        0.06212, 
        0.036, 
        -0.02265, 
        -0.06498, 
        0.07798, 
]

y_err = [
    -0.1211,
    0.10468,
    -0.13373,
    -0.12067,
    -0.07417,
    -0.04321,
    0.06724,
    -0.09145,
    0.07802,
    -0.04726,
    -0.10675,
    -0.09361,
    -0.02906,
    -0.04614,
    -0.04203,
    -0.03195,
    0.04147,
    0.09625,
    0.03611,
    0.09958,
    0.03331,
    -0.07651,
    0.09382,
    0.01726,
    0.08671,
    -0.12199,
    -0.06105,
    -0.05887,
    -0.04269,
    0.09678,
    -0.00249,
    0.03309,
    0.11285,
    -0.12065,
    -0.04247,
    -0.02754,
    0.08477,
    -0.09902,
    0.03303,
    0.05308,
    0.01875,
    -0.0086,
    -0.11248,
    -0.0636,
    -0.07238,
    -0.11342,
    -0.1247,
    -0.11903,
    -0.00284,
    -0.09606,
    -0.10886,
    0.0371,
    -0.11134,
    -0.07256,
    0.09797,
    -0.12446,
    0.05445,
    -0.10808,
    0.05545,
    0.05582,
    -0.07467,
    0.08713,
    -0.04554,
    -0.10056,
    -0.03083,
    0.11542,
    -0.0314,
    -0.12281,
    -0.12957,
    0.0431,
    0.05328,
    -0.08293,
    0.06935,
    -0.1206,
    0.11584,
    -0.05086,
    -0.11108,
    -0.01096,
    -0.09221,
    0.05773,
    -0.08802,
    0.11515,
    -0.06691,
    -0.03524,
    0.05875,
    -0.09423,
    -0.03392,
    -0.51261,
    0.05174,
    0.11359,
    -0.03038,
    -0.09766,
    -0.0481,
    0.09918,
    -0.07704,
    0.016,
    0.03628,
    -0.02499,
    -0.04007,
]

z_err = [
    0.03314,
    -0.01614,
    0.01234,
    -0.05234,
    0.10165,
    0.11401,
    0.0968,
    -0.09101,
    -0.10579,
    -0.05223,
    -0.00752,
    0.07521,
    -0.13767,
    0.007,
    0.12943,
    0.11385,
    -0.03397,
    -0.00644,
    -0.08276,
    0.08448,
    0.07989,
    -0.04613,
    0.07838,
    -0.12052,
    -0.00236,
    0.05989,
    0.12577,
    -0.10988,
    -0.04669,
    0.00851,
    0.13482,
    -0.12474,
    0.0146,
    -0.01611,
    -0.11342,
    -0.11665,
    -0.08398,
    0.06832,
    -0.05222,
    -0.08202,
    -0.0186,
    -0.04765,
    -0.07242,
    -0.09557,
    0.10307,
    0.07479,
    -0.02418,
    -0.03828,
    0.06403,
    0.0918,
    0.03834,
    -0.09025,
    -0.07289,
    0.11324,
    0.03611,
    -0.0634,
    0.03101,
    -0.0754,
    -0.1184,
    -0.03904,
    0.04835,
    -0.10434,
    0.12306,
    0.09081,
    0.06911,
    0.05046,
    -0.07969,
    -0.01022,
    -0.04342,
    -0.08727,
    -0.02667,
    0.08802,
    -0.11204,
    0.01839,
    -0.05898,
    0.10497,
    -0.07906,
    0.12806,
    -0.08748,
    -0.0467,
    -0.08402,
    0.00753,
    -0.04578,
    0.04486,
    -0.20178,
    0.07974,
    -0.06043,
    0.13763,
    0.03484,
    -0.07252,
    0.04971,
    0.08989,
    0.11407,
    0.05073,
    -0.08807,
    0.12649,
    -0.12619,
    0.11848,
    -0.1043,
]

# sets = zip(('x Error', x_err), ('y Error', y_err), ('z Error', z_err))
c = ['x', 'y', 'z']
import matplotlib
matplotlib.rcParams.update({'font.size': 25})

count = 0
for err_list in [x_err, y_err, z_err]:
    plt.figure(1, (5,5))
    plt.hist(err_list, bins = 20, range=[-0.2, 0.2])
    plt.xlabel(f'Error in {c[count]} position (m)')
    if count == 0:
        plt.ylabel(f'Frequency')
    plt.title(f'Mean = {round(np.array(err_list).mean(), 3)}\nStd. Dev. = {round(np.array(err_list).std(), 3)}')
    plt.tight_layout(pad=0.1, w_pad=0.1, h_pad=0.1)
    plt.ylim((0, 14))
    plt.savefig(f'plots/{c[count]}_err.png', dpi = 250)
    plt.close()
    count+=1


